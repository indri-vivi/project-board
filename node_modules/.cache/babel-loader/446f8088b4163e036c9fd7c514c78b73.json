{"ast":null,"code":"var _jsxFileName = \"/home/savi/Desktop/Project Board Typescript - Fe/src/CustomDragLayer.tsx\";\nimport React from 'react';\nimport { useDragLayer } from \"react-dnd\";\nimport { CustomDragLayerContainer } from './styles';\nimport { Card } from \"./Card\";\nimport { Column } from './Column';\nexport const CustomDragLayer = () => {\n  const {\n    isDragging,\n    item,\n    currentOffset\n  } = useDragLayer(monitor => ({\n    item: monitor.getItem(),\n    currentOffset: monitor.getSourceClientOffset(),\n    isDragging: monitor.isDragging()\n  }));\n  return isDragging ? /*#__PURE__*/React.createElement(CustomDragLayerContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: getItemStyles(currentOffset),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, item.type === \"COLUMN\" ? /*#__PURE__*/React.createElement(Column, {\n    id: item.id,\n    text: item.text,\n    index: item.index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(Card, {\n    columnId: item.columnId,\n    isPreview: true,\n    index: 0,\n    id: item.id,\n    text: item.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }))) : null;\n};\n\nconst getItemStyles = currentOffset => {\n  if (!currentOffset) {\n    return {\n      display: \"none\"\n    };\n  }\n\n  const {\n    x,\n    y\n  } = currentOffset;\n  const transform = `translate(${x}px, ${y}px)`;\n  return {\n    transform,\n    WebkitTransform: transform\n  };\n};","map":{"version":3,"sources":["/home/savi/Desktop/Project Board Typescript - Fe/src/CustomDragLayer.tsx"],"names":["React","useDragLayer","CustomDragLayerContainer","Card","Column","CustomDragLayer","isDragging","item","currentOffset","monitor","getItem","getSourceClientOffset","getItemStyles","type","id","text","index","columnId","display","x","y","transform","WebkitTransform"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAAsC,WAAtC;AACA,SAAQC,wBAAR,QAAuC,UAAvC;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAAQC,MAAR,QAAqB,UAArB;AAEA,OAAO,MAAMC,eAAyB,GAAG,MAAM;AAC7C,QAAM;AAAEC,IAAAA,UAAF;AAAcC,IAAAA,IAAd;AAAoBC,IAAAA;AAApB,MAAqCP,YAAY,CAACQ,OAAO,KAAI;AACjEF,IAAAA,IAAI,EAAEE,OAAO,CAACC,OAAR,EAD2D;AAEjEF,IAAAA,aAAa,EAAEC,OAAO,CAACE,qBAAR,EAFkD;AAGjEL,IAAAA,UAAU,EAAEG,OAAO,CAACH,UAAR;AAHqD,GAAJ,CAAR,CAAvD;AAMA,SAAOA,UAAU,gBACf,oBAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,KAAK,EAAEM,aAAa,CAACJ,aAAD,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,IAAI,CAACM,IAAL,KAAc,QAAd,gBACC,oBAAC,MAAD;AACE,IAAA,EAAE,EAAEN,IAAI,CAACO,EADX;AAEE,IAAA,IAAI,EAAEP,IAAI,CAACQ,IAFb;AAGE,IAAA,KAAK,EAAER,IAAI,CAACS,KAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,gBAOC,oBAAC,IAAD;AACE,IAAA,QAAQ,EAAET,IAAI,CAACU,QADjB;AAEE,IAAA,SAAS,EAAE,IAFb;AAGE,IAAA,KAAK,EAAE,CAHT;AAIE,IAAA,EAAE,EAAEV,IAAI,CAACO,EAJX;AAKE,IAAA,IAAI,EAAEP,IAAI,CAACQ,IALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,CADF,CADe,GAoBd,IApBH;AAqBD,CA5BM;;AA8BP,MAAMH,aAAa,GAAIJ,aAAD,IAAwD;AAC5E,MAAG,CAACA,aAAJ,EAAkB;AAChB,WAAO;AACLU,MAAAA,OAAO,EAAE;AADJ,KAAP;AAGD;;AAED,QAAM;AAAEC,IAAAA,CAAF;AAAKC,IAAAA;AAAL,MAAUZ,aAAhB;AACA,QAAMa,SAAS,GAAI,aAAYF,CAAE,OAAMC,CAAE,KAAzC;AACA,SAAO;AACLC,IAAAA,SADK;AAELC,IAAAA,eAAe,EAAED;AAFZ,GAAP;AAID,CAbD","sourcesContent":["import React from 'react'\nimport { useDragLayer, XYCoord } from \"react-dnd\"\nimport {CustomDragLayerContainer} from './styles'\nimport { Card } from \"./Card\"\nimport {Column} from './Column'\n\nexport const CustomDragLayer: React.FC = () => {\n  const { isDragging, item, currentOffset} = useDragLayer(monitor=> ({\n    item: monitor.getItem(),\n    currentOffset: monitor.getSourceClientOffset(),\n    isDragging: monitor.isDragging()\n  }))\n\n  return isDragging ? (\n    <CustomDragLayerContainer>\n      <div style={getItemStyles(currentOffset)}>\n        {item.type === \"COLUMN\" ? (\n          <Column\n            id={item.id} \n            text={item.text} \n            index={item.index}\n          />\n        ) : (\n          <Card\n            columnId={item.columnId} \n            isPreview={true} \n            index={0}\n            id={item.id} \n            text={item.text}\n          />\n        )}\n      </div>\n    </CustomDragLayerContainer>\n  ): null\n}\n\nconst getItemStyles = (currentOffset: XYCoord | null): React.CSSProperties => {\n  if(!currentOffset){\n    return {\n      display: \"none\"\n    }\n  }\n\n  const { x, y} = currentOffset\n  const transform = `translate(${x}px, ${y}px)`\n  return {\n    transform,\n    WebkitTransform: transform \n  }\n}"]},"metadata":{},"sourceType":"module"}