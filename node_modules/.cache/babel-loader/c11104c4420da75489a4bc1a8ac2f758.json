{"ast":null,"code":"var _jsxFileName = \"/home/savi/Desktop/Project Board Typescript - Fe/src/Card.tsx\";\nimport React, { useRef } from \"react\";\nimport { CardContainer } from \"./styles\";\nimport { useDrop } from \"react-dnd\";\nimport { useItemDrag } from './useItemDrag';\nimport { useAppState } from \"./AppStateContext\";\nexport const Card = ({\n  text,\n  id,\n  index,\n  columnId\n}) => {\n  const {\n    dispatch\n  } = useAppState();\n  const {\n    drag\n  } = useItemDrag({\n    type: \"CARD\",\n    id,\n    index,\n    text,\n    columnId\n  });\n  const [, drop] = useDrop({\n    accept: \"CARD\",\n\n    hover(item) {\n      if (item.id === id) {\n        return;\n      }\n\n      const dragIndex = item.index;\n      const hoverIndex = index;\n      const sourceColumn = item.columnId;\n      const targetColumn = columnId;\n      dispatch({\n        type: \"MOVE_TASK\",\n        payload: {\n          dragIndex,\n          hoverIndex,\n          sourceColumn,\n          targetColumn\n        }\n      });\n      item.index = hoverIndex;\n      item.columnId = targetColumn;\n    }\n\n  });\n  const ref = useRef(null);\n  drag(drop(ref));\n  return /*#__PURE__*/React.createElement(CardContainer, {\n    ref: ref,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 10\n    }\n  }, text);\n};","map":{"version":3,"sources":["/home/savi/Desktop/Project Board Typescript - Fe/src/Card.tsx"],"names":["React","useRef","CardContainer","useDrop","useItemDrag","useAppState","Card","text","id","index","columnId","dispatch","drag","type","drop","accept","hover","item","dragIndex","hoverIndex","sourceColumn","targetColumn","payload","ref"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,MAAf,QAA4B,OAA5B;AACA,SAASC,aAAT,QAA8B,UAA9B;AAEA,SAASC,OAAT,QAAwB,WAAxB;AACA,SAASC,WAAT,QAA4B,eAA5B;AAEA,SAASC,WAAT,QAA4B,mBAA5B;AAUA,OAAO,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,EAAR;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA;AAAnB,CAAD,KAA6C;AAC/D,QAAM;AAAEC,IAAAA;AAAF,MAAeN,WAAW,EAAhC;AACA,QAAM;AAAEO,IAAAA;AAAF,MAAWR,WAAW,CAAC;AAAES,IAAAA,IAAI,EAAE,MAAR;AAAgBL,IAAAA,EAAhB;AAAoBC,IAAAA,KAApB;AAA2BF,IAAAA,IAA3B;AAAiCG,IAAAA;AAAjC,GAAD,CAA5B;AACA,QAAM,GAAGI,IAAH,IAAWX,OAAO,CAAC;AACvBY,IAAAA,MAAM,EAAE,MADe;;AAEvBC,IAAAA,KAAK,CAACC,IAAD,EAAqB;AACxB,UAAIA,IAAI,CAACT,EAAL,KAAYA,EAAhB,EAAoB;AAClB;AACD;;AAED,YAAMU,SAAS,GAAGD,IAAI,CAACR,KAAvB;AACA,YAAMU,UAAU,GAAGV,KAAnB;AACA,YAAMW,YAAY,GAAGH,IAAI,CAACP,QAA1B;AACA,YAAMW,YAAY,GAAGX,QAArB;AACAC,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAE,WADC;AAEPS,QAAAA,OAAO,EAAE;AAAEJ,UAAAA,SAAF;AAAaC,UAAAA,UAAb;AAAyBC,UAAAA,YAAzB;AAAuCC,UAAAA;AAAvC;AAFF,OAAD,CAAR;AAKAJ,MAAAA,IAAI,CAACR,KAAL,GAAaU,UAAb;AACAF,MAAAA,IAAI,CAACP,QAAL,GAAgBW,YAAhB;AACD;;AAlBsB,GAAD,CAAxB;AAqBA,QAAME,GAAG,GAAGtB,MAAM,CAAiB,IAAjB,CAAlB;AACAW,EAAAA,IAAI,CAACE,IAAI,CAACS,GAAD,CAAL,CAAJ;AACA,sBAAO,oBAAC,aAAD;AAAe,IAAA,GAAG,EAAEA,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BhB,IAA3B,CAAP;AACD,CA3BM","sourcesContent":["import React, {useRef} from \"react\"\nimport { CardContainer } from \"./styles\"\nimport { CardDragItem } from './DragItem'\nimport { useDrop } from \"react-dnd\"\nimport { useItemDrag } from './useItemDrag'\n\nimport { useAppState } from \"./AppStateContext\"\n\ninterface CardProps {\n  id: string\n  columnId: string\n  text: string\n  isPreview?: boolean\n  index: number\n}\n\nexport const Card = ({ text, id, index, columnId}: CardProps) => { \n  const { dispatch } = useAppState()\n  const { drag } = useItemDrag({ type: \"CARD\", id, index, text, columnId })\n  const [, drop] = useDrop({ \n    accept: \"CARD\", \n    hover(item: CardDragItem) {\n      if (item.id === id) { \n        return\n      }\n\n      const dragIndex = item.index \n      const hoverIndex = index\n      const sourceColumn = item.columnId \n      const targetColumn = columnId\n      dispatch({\n        type: \"MOVE_TASK\",\n        payload: { dragIndex, hoverIndex, sourceColumn, targetColumn }\n      })\n\n      item.index = hoverIndex\n      item.columnId = targetColumn\n    }\n  })\n\n  const ref = useRef<HTMLDivElement>(null)\n  drag(drop(ref))\n  return <CardContainer ref={ref} >{text}</CardContainer>\n}"]},"metadata":{},"sourceType":"module"}